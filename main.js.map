{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["//Класс, который будет добавлять окну состояние «открыто» \nconst popupOpenedClass = 'popup_is-opened'; \n \n \n//Ф-я открытия модального окна \nexport function openModal(popupElement) { \n    popupElement.classList.add(popupOpenedClass); \n     //Закрытие по Esc \n     document.addEventListener('keydown', handleEscClose); \n   } \n \n   //Ф-я закрытия модального окна \n export function closeModal(popupElement) { \n    popupElement.classList.remove(popupOpenedClass); \n     //Удаление обработчика событий \n     document.removeEventListener('keydown', handleEscClose); \n   } \n \n//Обработчик нажатия клавиши Esc \n function handleEscClose(event) { \n     if (event.key === 'Escape') { \n       const openedPopup = document.querySelector(\".popup_is-opened\"); \n     if (openedPopup) { \n       closeModal(openedPopup); \n     } \n   } \n  } \n \n//Закрытие по оверлей \nexport function closeOverlay(event) { \n  if (event.target === event.currentTarget) { \n    closeModal(event.currentTarget); \n  } \n} ","// Функция для отображения ошибки \r\nfunction showInputError(formElement, inputElement, errorMessage, validationConfig) { \r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`); \r\n  inputElement.classList.add(validationConfig.inputErrorClass); \r\n  errorElement.textContent = errorMessage; \r\n  errorElement.classList.add(validationConfig.errorClass); \r\n}\r\n\r\n// Функция для очистки ошибок \r\nfunction hideInputError(formElement, inputElement, validationConfig) { \r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`); \r\n  inputElement.classList.remove(validationConfig.inputErrorClass); \r\n  errorElement.classList.remove(validationConfig.errorClass); \r\n  errorElement.textContent = \"\"; \r\n}\r\n\r\n// Проверка наличия невалидного поля\r\nfunction hasInvalidInput(inputList) {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  });\r\n}\r\n\r\n// Переключение состояния кнопки\r\nfunction toggleButtonState(inputList, buttonElement, validationConfig) {\r\n  if (hasInvalidInput(inputList)) {\r\n    buttonElement.disabled = true;\r\n    buttonElement.classList.add(validationConfig.inactiveButtonClass);\r\n  } else {\r\n    buttonElement.disabled = false;\r\n    buttonElement.classList.remove(validationConfig.inactiveButtonClass);\r\n  }\r\n}\r\n\r\n//Проверяем валидность поля\r\nconst isValid = (formElement, inputElement, validationConfig) => {\r\n  if(inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n    inputElement.setCustomValidity(\"\");\r\n  }\r\n  if (!inputElement.validity.valid) {\r\n     showInputError(formElement, inputElement, inputElement.validationMessage, validationConfig);\r\n  } else {\r\n     hideInputError(formElement, inputElement, validationConfig);\r\n  }\r\n}\r\n\r\n// Установка обработчиков событий\r\nfunction setEventListeners(formElement, validationConfig) {\r\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n  const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n\r\n  // Проверка, что элементы существуют\r\n  if (!inputList.length || !buttonElement) return;  // Если нет полей или кнопки\r\n\r\n  toggleButtonState(inputList, buttonElement, validationConfig);\r\n\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener('input', function () {\r\n      isValid(formElement, inputElement, validationConfig);\r\n      toggleButtonState(inputList, buttonElement, validationConfig);\r\n    })\r\n  })\r\n}\r\n\r\n// Включение валидации всех форм\r\nexport function enableValidation(validationConfig) {\r\n  const formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\r\n  formList.forEach((formElement) => {\r\n    setEventListeners(formElement, validationConfig);\r\n  })\r\n}\r\n\r\n// Очистка ошибок валидации\r\nexport function clearValidation(formElement, validationConfig) {\r\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n\r\n  inputList.forEach((inputElement) => {\r\n    hideInputError(formElement, inputElement, validationConfig);\r\n    inputElement.setCustomValidity(\"\");\r\n  })\r\n\r\n  const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n  buttonElement.disabled = true;\r\n  buttonElement.classList.add(validationConfig.inactiveButtonClass);\r\n}","const config = { \r\n  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-42', \r\n  headers: { \r\n    authorization: 'f81b68a9-e064-468a-9e6e-9f668a7a60c1', \r\n    'Content-Type': 'application/json', \r\n  } \r\n}\r\n \r\n// Функция для обработки ответа \r\nconst handleResponse = (res) => { \r\n  if (res.ok) { \r\n    return res.json(); \r\n  } \r\n  return Promise.reject(`Ошибка: ${res.status}`); \r\n}\r\n \r\n// Получение данных пользователя \r\nexport const getUserInfo = () => { \r\n  return fetch(`${config.baseUrl}/users/me`, { \r\n    headers: config.headers \r\n  }) \r\n    .then(handleResponse); \r\n}\r\n \r\n// Получение начальных карточек \r\nexport const getInitialCards = () => { \r\n  return fetch(`${config.baseUrl}/cards`, { \r\n    headers: config.headers \r\n  }) \r\n    .then(handleResponse); \r\n}\r\n \r\n// Обновление данных профиля \r\nexport const updateUserInfo = (name, about) => { \r\n  return fetch(`${config.baseUrl}/users/me`, { \r\n    method: 'PATCH', \r\n    headers: config.headers, \r\n    body: JSON.stringify({name,about}) \r\n  }) \r\n    .then(handleResponse); \r\n}\r\n \r\n// Добавление новой карточки \r\nexport const addCard = (name, link) => { \r\n  return fetch(`${config.baseUrl}/cards`, { \r\n    method: 'POST', \r\n    headers: config.headers, \r\n    body: JSON.stringify({name,link}) \r\n  }) \r\n    .then(handleResponse); \r\n}\r\n \r\n// Удаление карточки \r\nexport const removeCard = (cardId) => { \r\n  return fetch(`${config.baseUrl}/cards/${cardId}`, { \r\n    method: 'DELETE', \r\n    headers: config.headers \r\n    }) \r\n    .then(handleResponse); \r\n}\r\n \r\n// Постановка лайка и снятие \r\nexport const toggleLike = (cardId,isLiked) => { \r\n   const endpoint = `${config.baseUrl}/cards/likes/${cardId}`; \r\n   const fetchOptions = { \r\n    headers: config.headers, \r\n    method: isLiked ? \"DELETE\" : \"PUT\", \r\n   } \r\n  return fetch(endpoint, fetchOptions) \r\n    .then(handleResponse); \r\n}\r\n\r\n// Обновление аватара\r\nexport function updateAvatar(avatarUrl) {\r\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({ avatar: avatarUrl })\r\n  })\r\n    .then(handleResponse);\r\n}","import { toggleLike } from \"./api\"; \n \nconst template = document.querySelector(\"#card-template\").content; \n \nexport function createCard(cardData, callbacks, usersId) { \n  const clonedTemplate = template.querySelector('.card').cloneNode(true);\n  clonedTemplate.dataset.cardId = cardData._id;\n \n  // Получаем вложенные элементы \n  const titleElement = clonedTemplate.querySelector(\".card__title\"); \n  const imageElement = clonedTemplate.querySelector(\".card__image\"); \n  const likeButton = clonedTemplate.querySelector('.card__like-button'); \n  const deleteButton = clonedTemplate.querySelector('.card__delete-button'); \n  const likeCounter = clonedTemplate.querySelector(\".card__like-counter\"); \n \nif (!cardData || !cardData.owner) { \n  console.error('cardData or owner is undefined:', cardData); \n  return; \n  } \nconst ownerId = cardData.owner._id; // Присваиваем значение ownerId \n \n// Проверка, является ли текущий пользователь владельцем карточки \nif (ownerId !== usersId) { \n  deleteButton.style.display = 'none'; \n} else { \n// Добавляем обработчик клика на кнопку удаления \n  deleteButton.addEventListener(\"click\", () => { \n  callbacks.deleteFunction(clonedTemplate); // Вызываем колбэк с элементом карточки \n  }); \n} \n   \nconst isLiked = cardData.likes.some(like => like._id === usersId); \n \n  // Устанавливаем значения \n  titleElement.textContent = cardData.name; \n  imageElement.alt = cardData.name; \n  imageElement.src = cardData.link; \n  likeCounter.textContent = cardData.likes.length || \"\"; \n \n  // Добавляем обработчик клика для кнопки лайка \n  likeButton.addEventListener('click', () => { \n    callbacks.likeFunction(likeButton, cardData._id, isLiked, likeCounter); \n  }); \n \n  imageElement.addEventListener('click', () =>  \n    callbacks.onCardClickFunction(cardData)); \n  return clonedTemplate; \n} \n \nexport function likeCard(likeButton, cardId, isLiked, likeCounter) { \n// Вызываем API на сервере \n  toggleLike(cardId, isLiked) \n    .then((updatedCard) => { \n      likeCounter.textContent = updatedCard.likes.length; \n      likeButton.classList.toggle(\"card__like-button_is-active\"); \n    }) \n    .catch((error) => console.log(`Не удалось поставить лайк: ${error}`)); \n}\n","import './index.css'; // добавьте импорт главного файла стилей \nimport { openModal, closeModal, closeOverlay } from './components/modal.js';\nimport { enableValidation, clearValidation } from './components/validation.js';\nimport { createCard, likeCard } from './components/card.js';\nimport { getUserInfo, getInitialCards, updateUserInfo, addCard, removeCard, updateAvatar } from './components/api.js';\n\n// Конфиг валидации\nconst validationConfig = {\n  formSelector: '.popup__form',\n  inputSelector: '.popup__input',\n  submitButtonSelector: '.popup__button',\n  inactiveButtonClass: 'popup__button_disabled',\n  inputErrorClass: 'popup__input_type_error',\n  errorClass: 'popup__error_visible'\n};\n\n// DOM элементы\nconst profileEditButton = document.querySelector('.profile__edit-button');\nconst profileAddButton = document.querySelector('.profile__add-button');\nconst profileAvatar = document.querySelector('.profile__image');\nconst placesList = document.querySelector('.places__list');\n\n// Попапы\nconst popupEditProfile = document.querySelector('.popup_type_edit');\nconst popupAddCard = document.querySelector('.popup_type_new-card');\nconst popupImage = document.querySelector('.popup_type_image');\nconst popupEditAvatar = document.querySelector('.popup_type_edit-avatar');\nconst popupConfirm = document.querySelector('.popup_type_confirm');\n\n// Формы\nconst formEditProfile = popupEditProfile.querySelector('.popup__form');\nconst formAddCard = popupAddCard.querySelector('.popup__form');\nconst formEditAvatar = popupEditAvatar.querySelector('.popup__form');\n\n// Элементы профиля\nconst profileTitle = document.querySelector('.profile__title');\nconst profileDescription = document.querySelector('.profile__description');\nconst closeButtons = document.querySelectorAll('.popup__close');\n\n// Переменные для хранения данных\nlet userId;\nlet cardToDelete;\n\n// Включение валидации\nenableValidation(validationConfig);\n\n// Функция загрузки начальных данных\nfunction loadInitialData() {\n  return Promise.all([getUserInfo(), getInitialCards()])\n    .then(([userData, cards]) => {\n      userId = userData._id;\n      updateProfileInfo(userData);\n      renderCards(cards, userId);\n    })\n    .catch(err => console.log(err));\n}\n\n// Функция обновления информации профиля\nfunction updateProfileInfo(userData) {\n  profileTitle.textContent = userData.name;\n  profileDescription.textContent = userData.about;\n  profileAvatar.style.backgroundImage = `url('${userData.avatar}')`;\n}\n\n// Функция рендеринга карточек\nfunction renderCards(cards, userId) {\n  cards.forEach(cardData => {\n    const card = createCard(cardData, {\n      deleteFunction: handleDeleteCard,\n      likeFunction: handleLikeCard,\n      onCardClickFunction: handleCardClick\n    }, userId);\n    placesList.append(card);\n  });\n}\n\n// Обработчики событий\nfunction handleEditProfileClick() {\n  formEditProfile.elements.name.value = profileTitle.textContent;\n  formEditProfile.elements.description.value = profileDescription.textContent;\n  clearValidation(formEditProfile, validationConfig);\n  openModal(popupEditProfile);\n}\n\nfunction handleAddCardClick() {\n  formAddCard.reset();\n  clearValidation(formAddCard, validationConfig);\n  openModal(popupAddCard);\n}\n\nfunction handleEditAvatarClick() {\n  formEditAvatar.reset();\n  clearValidation(formEditAvatar, validationConfig);\n  openModal(popupEditAvatar);\n}\n\nfunction handleCardClick(cardData) {\n  const popupImageElement = popupImage.querySelector('.popup__image');\n  const popupCaptionElement = popupImage.querySelector('.popup__caption');\n  \n  popupImageElement.src = cardData.link;\n  popupImageElement.alt = cardData.name;\n  popupCaptionElement.textContent = cardData.name;\n  \n  openModal(popupImage);\n}\n\nfunction handleDeleteCard(cardElement) {\n  cardToDelete = cardElement;\n  openModal(popupConfirm);\n}\n\nfunction handleLikeCard(likeButton, cardId, isLiked, likeCounter) {\n  likeCard(likeButton, cardId, isLiked, likeCounter);\n}\n\n// Обработчики отправки форм\nfunction handleEditProfileSubmit(evt) {\n  evt.preventDefault();\n  const submitButton = evt.submitter;\n  const originalText = submitButton.textContent;\n  \n  submitButton.textContent = 'Сохранение...';\n  \n  updateUserInfo(\n    formEditProfile.elements.name.value,\n    formEditProfile.elements.description.value\n  )\n    .then(userData => {\n      updateProfileInfo(userData);\n      closeModal(popupEditProfile);\n    })\n    .catch(err => console.log(err))\n    .finally(() => {\n      submitButton.textContent = originalText;\n    });\n}\n\nfunction handleAddCardSubmit(evt) {\n  evt.preventDefault();\n  const submitButton = evt.submitter;\n  const originalText = submitButton.textContent;\n  \n  submitButton.textContent = 'Сохранение...';\n  \n  addCard(\n    formAddCard.elements['place-name'].value,\n    formAddCard.elements.link.value\n  )\n    .then(cardData => {\n      const card = createCard(cardData, {\n        deleteFunction: handleDeleteCard,\n        likeFunction: handleLikeCard,\n        onCardClickFunction: handleCardClick\n      }, userId);\n      placesList.prepend(card);\n      closeModal(popupAddCard);\n      formAddCard.reset();\n    })\n    .catch(err => console.log(err))\n    .finally(() => {\n      submitButton.textContent = originalText;\n    });\n}\n\nfunction handleEditAvatarSubmit(evt) {\n  evt.preventDefault();\n  const submitButton = evt.submitter;\n  const originalText = submitButton.textContent;\n  \n  submitButton.textContent = 'Сохранение...';\n  \n  updateAvatar(formEditAvatar.elements.avatar.value)\n    .then(userData => {\n      profileAvatar.style.backgroundImage = `url('${userData.avatar}')`;\n      closeModal(popupEditAvatar);\n    })\n    .catch(err => console.log(err))\n    .finally(() => {\n      submitButton.textContent = originalText;\n    });\n}\n\nfunction handleConfirmSubmit(evt) {\n  evt.preventDefault();\n  if (!cardToDelete) return;\n\n  const cardId = cardToDelete.dataset.cardId;\n  \n  removeCard(cardId)\n    .then(() => {\n      cardToDelete.remove();\n      closeModal(popupConfirm);\n    })\n    .catch(err => console.log(\"Ошибка удаления:\", err))\n    .finally(() => {\n      cardToDelete = null; // сброс только после завершения\n    })\n}\n\ncloseButtons.forEach(button => { \n  button.addEventListener('click', function() { \n    const popup = this.closest('.popup'); \n    closeModal(popup); \n  })\n})\n\n// Навешивание обработчиков событий\nprofileEditButton.addEventListener('click', handleEditProfileClick);\nprofileAddButton.addEventListener('click', handleAddCardClick);\nprofileAvatar.addEventListener('click', handleEditAvatarClick);\n\nformEditProfile.addEventListener('submit', handleEditProfileSubmit);\nformAddCard.addEventListener('submit', handleAddCardSubmit);\nformEditAvatar.addEventListener('submit', handleEditAvatarSubmit);\npopupConfirm.querySelector('.popup__form').addEventListener('submit', handleConfirmSubmit);\n\n// Закрытие попапов по клику на оверлей\npopupEditProfile.addEventListener('click', closeOverlay);\npopupAddCard.addEventListener('click', closeOverlay);\npopupImage.addEventListener('click', closeOverlay);\npopupEditAvatar.addEventListener('click', closeOverlay);\npopupConfirm.addEventListener('click', closeOverlay);\n\n// Загрузка начальных данных\nloadInitialData();"],"names":["popupOpenedClass","openModal","popupElement","classList","add","document","addEventListener","handleEscClose","closeModal","remove","removeEventListener","event","key","openedPopup","querySelector","closeOverlay","target","currentTarget","hideInputError","formElement","inputElement","validationConfig","errorElement","concat","id","inputErrorClass","errorClass","textContent","toggleButtonState","inputList","buttonElement","some","validity","valid","hasInvalidInput","disabled","inactiveButtonClass","clearValidation","Array","from","querySelectorAll","inputSelector","forEach","setCustomValidity","submitButtonSelector","config","baseUrl","headers","authorization","handleResponse","res","ok","json","Promise","reject","status","template","content","createCard","cardData","callbacks","usersId","clonedTemplate","cloneNode","dataset","cardId","_id","titleElement","imageElement","likeButton","deleteButton","likeCounter","owner","style","display","deleteFunction","isLiked","likes","like","name","alt","src","link","length","likeFunction","onCardClickFunction","console","error","userId","cardToDelete","formSelector","profileEditButton","profileAddButton","profileAvatar","placesList","popupEditProfile","popupAddCard","popupImage","popupEditAvatar","popupConfirm","formEditProfile","formAddCard","formEditAvatar","profileTitle","profileDescription","closeButtons","updateProfileInfo","userData","about","backgroundImage","avatar","handleCardClick","popupImageElement","popupCaptionElement","handleDeleteCard","cardElement","handleLikeCard","endpoint","fetch","method","then","toggleLike","updatedCard","toggle","catch","log","likeCard","patternMismatch","errorMessage","showInputError","validationMessage","isValid","setEventListeners","enableValidation","button","this","closest","elements","value","description","reset","evt","preventDefault","submitButton","submitter","originalText","body","JSON","stringify","err","finally","card","prepend","avatarUrl","all","_ref","_ref2","cards","append","renderCards"],"sourceRoot":""}